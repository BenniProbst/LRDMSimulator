name: Maven Build Pipeline

on:
  push:
    branches: [main, dev, 'feature/**']
  pull_request:
    branches: [main, dev]

env:
  JAVA_VERSION: '17'
  JAVA_DISTRIBUTION: 'temurin'
  MAVEN_OPTS: '-Dmaven.repo.local=.m2/repository'

jobs:
  build:
    name: Build and Test
    runs-on: self-hosted
    steps:
      - name: Fix Git permissions
        run: |
          git config --global --add safe.directory ${{ github.workspace }}
          git config --global core.autocrlf false
        shell: cmd

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Detect project structure
        id: detect
        run: |
          if exist "pom.xml" (
            echo WORKING_DIR=. >> %GITHUB_ENV%
            echo Maven project found in root directory
          ) else if exist "LRDMSimulator\pom.xml" (
            echo WORKING_DIR=LRDMSimulator >> %GITHUB_ENV%
            echo Maven project found in LRDMSimulator subdirectory
          ) else (
            echo No Maven project found
            exit /b 1
          )
        shell: cmd

      - name: Runner Information
        run: |
          echo === Runner Information ===
          echo OS: Windows
          echo Architecture: X64
          echo Workspace: %GITHUB_WORKSPACE%
          echo.
          echo === Java ^& Maven ===
          java -version 2>nul || echo Java not found
          mvn --version 2>nul || echo Maven not found
          echo.
          echo === Working Directory ===
          cd
          dir
        shell: cmd

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: |
            %USERPROFILE%\.m2\repository
            ${{ env.WORKING_DIR }}\.m2\repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Build and test with coverage
        run: mvn clean verify -Pcoverage -Djava.awt.headless=true
        working-directory: ${{ env.WORKING_DIR }}
        shell: cmd
        env:
          JAVA_OPTS: "-Djava.awt.headless=true"

      - name: Check test results
        run: |
          echo === Build Information ===
          echo Branch/PR: ${{ github.ref }}
          echo Event: ${{ github.event_name }}
          echo === Test Reports ===
          if exist "${{ env.WORKING_DIR }}\target\surefire-reports" (
            dir "${{ env.WORKING_DIR }}\target\surefire-reports" /b
            echo.
            echo === Test Summary ===
            findstr /c:"Tests run:" "${{ env.WORKING_DIR }}\target\surefire-reports\*.txt" 2>nul || echo No test summary found
          ) else (
            echo No test reports found!
          )
        shell: cmd
        if: always()

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-${{ github.run_id }}
          path: |
            ${{ env.WORKING_DIR }}/target/
            ${{ env.WORKING_DIR }}/target/surefire-reports/
            ${{ env.WORKING_DIR }}/target/site/jacoco/
          if-no-files-found: warn
        if: always()
