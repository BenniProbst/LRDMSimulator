name: Maven Build Pipeline

on:
  push:
    branches: [main, dev, 'feature/**']
  pull_request:
    branches: [main, dev]

env:
  JAVA_VERSION: '17'
  JAVA_DISTRIBUTION: 'temurin'
  MAVEN_OPTS: '-Dmaven.repo.local=.m2/repository'

jobs:
  setup:
    name: Determine Project Structure
    runs-on: self-hosted
    outputs:
      working-directory: ${{ steps.detect.outputs.working-directory }}
      java-version: ${{ steps.extract-java.outputs.java-version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Detect project structure
        id: detect
        run: |
          if (Test-Path "pom.xml") {
            echo "working-directory=." >> $env:GITHUB_OUTPUT
            Write-Host "Maven project found in root directory"
          } elseif (Test-Path "LRDMSimulator/pom.xml") {
            echo "working-directory=LRDMSimulator" >> $env:GITHUB_OUTPUT
            Write-Host "Maven project found in LRDMSimulator subdirectory"
          } else {
            Write-Error "No Maven project found"
            exit 1
          }
        shell: pwsh
      - name: Extract Java version from POM
        id: extract-java
        run: |
          $pomPath = if (Test-Path "pom.xml") { "pom.xml" } else { "LRDMSimulator/pom.xml" }
          $pomContent = Get-Content $pomPath -Raw
          if ($pomContent -match '<maven\.compiler\.source>(\d+)</maven\.compiler\.source>') {
            $javaVersion = $Matches[1]
            echo "java-version=$javaVersion" >> $env:GITHUB_OUTPUT
            Write-Host "Extracted Java version: $javaVersion from POM"
          } else {
            echo "java-version=${{ env.JAVA_VERSION }}" >> $env:GITHUB_OUTPUT
            Write-Host "Using default Java version: ${{ env.JAVA_VERSION }}"
          }
        shell: pwsh

  build-main:
    name: Build Main Branch
    if: github.ref == 'refs/heads/main'
    runs-on: self-hosted
    needs: setup
    steps:
      - name: Fix Git permissions
        run: |
          git config --global --add safe.directory ${{ github.workspace }}
          git config --global core.autocrlf false
        shell: pwsh
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ needs.setup.outputs.java-version }}
      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
            ${{ needs.setup.outputs.working-directory }}/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-
      - name: Build with coverage
        run: mvn clean verify -Pcoverage
        working-directory: ${{ needs.setup.outputs.working-directory }}
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: main-build-artifacts
          path: ${{ needs.setup.outputs.working-directory }}/target/

  build-dev:
    name: Build Dev Branch
    if: github.ref == 'refs/heads/dev'
    runs-on: self-hosted
    needs: setup
    steps:
      - name: Fix Git permissions
        run: |
          git config --global --add safe.directory ${{ github.workspace }}
          git config --global core.autocrlf false
        shell: pwsh
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ needs.setup.outputs.java-version }}
      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
            ${{ needs.setup.outputs.working-directory }}/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-
      - name: Build without tests
        run: mvn clean compile test-compile -DskipTests=true
        working-directory: ${{ needs.setup.outputs.working-directory }}

  build-feature:
    name: Build Feature Branch
    if: startsWith(github.ref, 'refs/heads/feature/')
    runs-on: self-hosted
    needs: setup
    steps:
      - name: Fix Git permissions
        run: |
          git config --global --add safe.directory ${{ github.workspace }}
          git config --global core.autocrlf false
        shell: pwsh
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ needs.setup.outputs.java-version }}
      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
            ${{ needs.setup.outputs.working-directory }}/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-
      - name: Lightweight build
        run: mvn clean compile -DskipTests=true
        working-directory: ${{ needs.setup.outputs.working-directory }}

  build-pr:
    name: Build Pull Request
    if: github.event_name == 'pull_request'
    runs-on: self-hosted
    needs: setup
    steps:
      - name: Fix Git permissions
        run: |
          git config --global --add safe.directory ${{ github.workspace }}
          git config --global core.autocrlf false
        shell: pwsh
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ needs.setup.outputs.java-version }}
      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
            ${{ needs.setup.outputs.working-directory }}/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-
      - name: Build and test PR
        run: mvn clean verify -Pcoverage
        working-directory: ${{ needs.setup.outputs.working-directory }}
      - name: Upload PR artifacts
        uses: actions/upload-artifact@v4
        with:
          name: pr-build-artifacts
          path: ${{ needs.setup.outputs.working-directory }}/target/
