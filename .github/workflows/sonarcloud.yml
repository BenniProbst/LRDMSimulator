name: SonarCloud PR Analysis

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  JAVA_VERSION: '17'
  JAVA_DISTRIBUTION: 'temurin'
  SONAR_PROJECT_KEY: 'BenniProbst_LRDMSimulator'
  SONAR_ORGANIZATION: 'benniprobst'
  SONAR_HOST_URL: 'https://sonarcloud.io'

jobs:
  setup-sonar:
    name: Setup SonarCloud Analysis
    runs-on: self-hosted
    outputs:
      working-directory: ${{ steps.detect.outputs.working-directory }}
      java-version: ${{ steps.extract-java.outputs.java-version }}
      sources-path: ${{ steps.detect.outputs.sources-path }}
      tests-path: ${{ steps.detect.outputs.tests-path }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Detect project structure
        id: detect
        run: |
          if exist "pom.xml" (
            echo working-directory=. >> %GITHUB_OUTPUT%
            echo sources-path=src >> %GITHUB_OUTPUT%
            echo tests-path=tests >> %GITHUB_OUTPUT%
            echo Maven project found in root directory
          ) else if exist "LRDMSimulator\pom.xml" (
            echo working-directory=LRDMSimulator >> %GITHUB_OUTPUT%
            echo sources-path=LRDMSimulator/src >> %GITHUB_OUTPUT%
            echo tests-path=LRDMSimulator/tests >> %GITHUB_OUTPUT%
            echo Maven project found in LRDMSimulator subdirectory
          ) else (
            echo No Maven project found
            exit /b 1
          )
        shell: cmd

      - name: Extract Java version from POM
        id: extract-java
        run: |
          if exist "pom.xml" (
            set POM_PATH=pom.xml
          ) else (
            set POM_PATH=LRDMSimulator\pom.xml
          )
          findstr "maven.compiler.source" %POM_PATH% > temp_version.txt
          for /f "tokens=2 delims=<>" %%i in (temp_version.txt) do (
            echo java-version=%%i >> %GITHUB_OUTPUT%
            echo Extracted Java version: %%i from POM
            goto :found
          )
          :found
          if exist temp_version.txt del temp_version.txt
          if not defined JAVA_VERSION (
            echo java-version=%JAVA_VERSION% >> %GITHUB_OUTPUT%
            echo Using default Java version: %JAVA_VERSION%
          )
        shell: cmd

  sonarcloud-pr:
    name: SonarCloud PR Analysis
    if: github.event_name == 'pull_request'
    runs-on: self-hosted
    needs: setup-sonar
    steps:
      - name: Fix Git permissions
        run: |
          git config --global --add safe.directory ${{ github.workspace }}
          git config --global core.autocrlf false
        shell: cmd

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ needs.setup-sonar.outputs.java-version }}

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: |
            %USERPROFILE%\.m2\repository
            ${{ needs.setup-sonar.outputs.working-directory }}\.m2\repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: %USERPROFILE%\.sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Build with coverage
        run: mvn clean verify -Pcoverage
        working-directory: ${{ needs.setup-sonar.outputs.working-directory }}
        shell: cmd

      - name: Set environment variables for SonarCloud
        run: |
          echo SONAR_SOURCES=${{ needs.setup-sonar.outputs.sources-path }} >> %GITHUB_ENV%
          echo SONAR_TESTS=${{ needs.setup-sonar.outputs.tests-path }} >> %GITHUB_ENV%
          echo SONAR_WORKING_DIR=${{ needs.setup-sonar.outputs.working-directory }} >> %GITHUB_ENV%
        shell: cmd

      - name: Debug - Check source and test paths
        run: |
          echo === Project Structure ===
          echo Working Directory: %SONAR_WORKING_DIR%
          echo Sources Path: %SONAR_SOURCES%
          echo Tests Path: %SONAR_TESTS%
          echo === Source Directory ===
          if exist "%SONAR_SOURCES%" (
            echo Source directory exists
            dir "%SONAR_SOURCES%" /s /b | findstr "\.java$"
          ) else (
            echo Source directory does not exist!
          )
          echo === Test Directory ===
          if exist "%SONAR_TESTS%" (
            echo Test directory exists
            dir "%SONAR_TESTS%" /s /b | findstr "\.java$"
          ) else (
            echo Test directory does not exist!
          )
          echo === Coverage Reports ===
          if exist "%SONAR_WORKING_DIR%\target\site\jacoco\jacoco.xml" (
            echo JaCoCo XML report found
          ) else (
            echo JaCoCo XML report NOT found
          )
        shell: cmd

      - name: Run SonarCloud analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_SECRET }}
        run: |
          mvn sonar:sonar ^
            -Dsonar.projectKey=%SONAR_PROJECT_KEY% ^
            -Dsonar.organization=%SONAR_ORGANIZATION% ^
            -Dsonar.host.url=%SONAR_HOST_URL% ^
            -Dsonar.token=%SONAR_TOKEN% ^
            -Dsonar.sources=%SONAR_SOURCES% ^
            -Dsonar.tests=%SONAR_TESTS% ^
            -Dsonar.java.source=17 ^
            -Dsonar.java.target=17 ^
            -Dsonar.java.binaries=target/classes ^
            -Dsonar.java.test.binaries=target/test-classes ^
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml ^
            -Dsonar.junit.reportPaths=target/surefire-reports ^
            -Dsonar.pullrequest.key=${{ github.event.number }} ^
            -Dsonar.pullrequest.branch=${{ github.head_ref }} ^
            -Dsonar.pullrequest.base=${{ github.base_ref }} ^
            -Dsonar.verbose=true
        working-directory: ${{ needs.setup-sonar.outputs.working-directory }}
        shell: cmd

  sonarcloud-main:
    name: SonarCloud Main Analysis
    if: github.ref == 'refs/heads/main'
    runs-on: self-hosted
    needs: setup-sonar
    steps:
      - name: Fix Git permissions
        run: |
          git config --global --add safe.directory ${{ github.workspace }}
          git config --global core.autocrlf false
        shell: cmd

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ needs.setup-sonar.outputs.java-version }}

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: |
            %USERPROFILE%\.m2\repository
            ${{ needs.setup-sonar.outputs.working-directory }}\.m2\repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: %USERPROFILE%\.sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Set environment variables for SonarCloud
        run: |
          echo SONAR_SOURCES=${{ needs.setup-sonar.outputs.sources-path }} >> %GITHUB_ENV%
          echo SONAR_TESTS=${{ needs.setup-sonar.outputs.tests-path }} >> %GITHUB_ENV%
          echo SONAR_WORKING_DIR=${{ needs.setup-sonar.outputs.working-directory }} >> %GITHUB_ENV%
        shell: cmd

      - name: Build with coverage and run SonarCloud analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_SECRET }}
        run: |
          mvn clean verify -Pcoverage org.sonarsource.scanner.maven:sonar-maven-plugin:sonar ^
            -Dsonar.projectKey=%SONAR_PROJECT_KEY% ^
            -Dsonar.organization=%SONAR_ORGANIZATION% ^
            -Dsonar.host.url=%SONAR_HOST_URL% ^
            -Dsonar.token=%SONAR_TOKEN% ^
            -Dsonar.sources=%SONAR_SOURCES% ^
            -Dsonar.tests=%SONAR_TESTS% ^
            -Dsonar.java.source=17 ^
            -Dsonar.java.target=17 ^
            -Dsonar.java.binaries=target/classes ^
            -Dsonar.java.test.binaries=target/test-classes ^
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml ^
            -Dsonar.junit.reportPaths=target/surefire-reports ^
            -Dsonar.verbose=true
        working-directory: ${{ needs.setup-sonar.outputs.working-directory }}
        shell: cmd
