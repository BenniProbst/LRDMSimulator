name: SonarCloud Analysis Pipeline

on:
  workflow_run:
    workflows: ["Maven Build Pipeline"]
    types: [completed]
    branches: [main, dev, 'feature/**']
  pull_request:
    branches: [main, dev]

env:
  JAVA_VERSION: '17'
  JAVA_DISTRIBUTION: 'temurin'
  SONAR_PROJECT_KEY: 'BenniProbst_LRDMSimulator'
  SONAR_ORGANIZATION: 'benniprobst'
  SONAR_HOST_URL: 'https://sonarcloud.io'
  WORKING_DIRECTORY: 'LRDMSimulator'

jobs:
  sonar-main:
    name: SonarCloud Main Analysis
    if: github.event.workflow_run.head_branch == 'main' && github.event.workflow_run.conclusion == 'success'
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: main-build-artifacts
          path: ${{ env.WORKING_DIRECTORY }}/target/
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}
      - name: SonarCloud Analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_SECRET }}
        run: |
          mvn sonar:sonar \
            -Dsonar.projectKey=${{ env.SONAR_PROJECT_KEY }} \
            -Dsonar.organization=${{ env.SONAR_ORGANIZATION }} \
            -Dsonar.host.url=${{ env.SONAR_HOST_URL }} \
            -Dsonar.token=${{ secrets.SONAR_SECRET }} \
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
        working-directory: ${{ env.WORKING_DIRECTORY }}

  sonar-branches:
    name: SonarCloud Branch Analysis
    if: (github.event.workflow_run.head_branch == 'dev' || startsWith(github.event.workflow_run.head_branch, 'feature/')) && github.event.workflow_run.conclusion == 'success'
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}
      - name: SonarCloud Analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_SECRET }}
        run: |
          mvn sonar:sonar \
            -Dsonar.projectKey=${{ env.SONAR_PROJECT_KEY }} \
            -Dsonar.organization=${{ env.SONAR_ORGANIZATION }} \
            -Dsonar.host.url=${{ env.SONAR_HOST_URL }} \
            -Dsonar.token=${{ secrets.SONAR_SECRET }} \
            -DskipTests=true
        working-directory: ${{ env.WORKING_DIRECTORY }}

  sonar-pr:
    name: SonarCloud PR Analysis
    if: github.event_name == 'pull_request'
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}
      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
            ${{ env.WORKING_DIRECTORY }}/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-
      - name: Build and test for PR
        run: mvn clean verify -Pcoverage
        working-directory: ${{ env.WORKING_DIRECTORY }}
      - name: SonarCloud PR Analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_SECRET }}
        run: |
          mvn sonar:sonar \
            -Dsonar.projectKey=${{ env.SONAR_PROJECT_KEY }} \
            -Dsonar.organization=${{ env.SONAR_ORGANIZATION }} \
            -Dsonar.host.url=${{ env.SONAR_HOST_URL }} \
            -Dsonar.token=${{ secrets.SONAR_SECRET }} \
            -Dsonar.pullrequest.key=${{ github.event.number }} \
            -Dsonar.pullrequest.branch=${{ github.head_ref }} \
            -Dsonar.pullrequest.base=${{ github.base_ref }} \
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
        working-directory: ${{ env.WORKING_DIRECTORY }}

  attestation:
    name: Attest Analysis Results
    if: always() && (needs.sonar-main.result == 'success' || needs.sonar-branches.result == 'success' || needs.sonar-pr.result == 'success')
    runs-on: self-hosted
    needs: [sonar-main, sonar-branches, sonar-pr]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Create analysis artifacts
        run: |
          mkdir -p ./sonar-artifacts
          {
            echo "SonarCloud Analysis Report"
            echo "=========================="
            echo "Project: ${{ env.SONAR_PROJECT_KEY }}"
            echo "Analysis Date: $(date -Iseconds)"
            echo "SonarCloud URL: ${{ env.SONAR_HOST_URL }}"
            echo "Organization: ${{ env.SONAR_ORGANIZATION }}"
            echo "Workflow: ${{ github.workflow }}"
            echo "Run ID: ${{ github.run_id }}"
          } > ./sonar-artifacts/analysis-report.txt
      - name: Generate build provenance attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: './sonar-artifacts/*'