name: SonarCloud Analysis Pipeline

on:
  push:
    branches: [main, dev, 'feature/**']
  pull_request:
    branches: [main, dev]

env:
  JAVA_VERSION: '17'
  JAVA_DISTRIBUTION: 'temurin'
  SONAR_PROJECT_KEY: 'BenniProbst_LRDMSimulator'
  SONAR_ORGANIZATION: 'benniprobst'
  SONAR_HOST_URL: 'https://sonarcloud.io'
  WORKING_DIRECTORY: '.'

jobs:
  sonar-main:
    name: SonarCloud Main Analysis
    runs-on: self-hosted
    steps:
      - name: Check if should run
        id: should_run
        run: |
          if "%GITHUB_REF%" == "refs/heads/main" if "%GITHUB_EVENT_NAME%" == "push" (
            echo run=true >> %GITHUB_OUTPUT%
            echo This job will run for main branch push
          ) else (
            echo run=false >> %GITHUB_OUTPUT%
            echo This job will be skipped - not main branch push
          )
        shell: cmd
      - name: Fix Git permissions
        if: steps.should_run.outputs.run == 'true'
        run: |
          git config --global --add safe.directory ${{ github.workspace }}
          git config --global core.autocrlf false
        shell: cmd
      - name: Checkout repository
        if: steps.should_run.outputs.run == 'true'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up JDK
        if: steps.should_run.outputs.run == 'true'
        uses: actions/setup-java@v4
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}
      - name: Cache Maven dependencies
        if: steps.should_run.outputs.run == 'true'
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
            .m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-
      - name: Verify project structure
        if: steps.should_run.outputs.run == 'true'
        run: |
          echo === Project Structure Debug ===
          echo Current directory: %CD%
          dir /b
          echo.
          echo === Source files ===
          if exist src dir src /s /b *.java
          echo.
          echo === Test files ===
          if exist tests dir tests /s /b *.java
        shell: cmd
      - name: Build with coverage for SonarCloud
        if: steps.should_run.outputs.run == 'true'
        run: mvn clean verify -Pcoverage
        working-directory: ${{ env.WORKING_DIRECTORY }}
        shell: cmd
      - name: SonarCloud Analysis
        if: steps.should_run.outputs.run == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_SECRET }}
        run: |
          mvn sonar:sonar ^
            -Dsonar.projectKey=${{ env.SONAR_PROJECT_KEY }} ^
            -Dsonar.organization=${{ env.SONAR_ORGANIZATION }} ^
            -Dsonar.host.url=${{ env.SONAR_HOST_URL }} ^
            -Dsonar.token=${{ secrets.SONAR_SECRET }} ^
            -Dsonar.sources=src ^
            -Dsonar.tests=tests ^
            -Dsonar.java.source=17 ^
            -Dsonar.java.target=17 ^
            -Dsonar.java.binaries=target/classes ^
            -Dsonar.java.test.binaries=target/test-classes ^
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml ^
            -Dsonar.junit.reportPaths=target/surefire-reports ^
            -Dsonar.verbose=true
        working-directory: ${{ env.WORKING_DIRECTORY }}
        shell: cmd

  sonar-branches:
    name: SonarCloud Branch Analysis
    runs-on: self-hosted
    steps:
      - name: Check if should run
        id: should_run
        run: |
          if "%GITHUB_REF%" == "refs/heads/dev" if "%GITHUB_EVENT_NAME%" == "push" (
            echo run=true >> %GITHUB_OUTPUT%
            echo This job will run for dev branch push
          ) else if "%GITHUB_REF:~0,20%" == "refs/heads/feature/" if "%GITHUB_EVENT_NAME%" == "push" (
            echo run=true >> %GITHUB_OUTPUT%
            echo This job will run for feature branch push
          ) else (
            echo run=false >> %GITHUB_OUTPUT%
            echo This job will be skipped - not dev or feature branch push
          )
        shell: cmd
      - name: Fix Git permissions
        if: steps.should_run.outputs.run == 'true'
        run: |
          git config --global --add safe.directory ${{ github.workspace }}
          git config --global core.autocrlf false
        shell: cmd
      - name: Checkout repository
        if: steps.should_run.outputs.run == 'true'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up JDK
        if: steps.should_run.outputs.run == 'true'
        uses: actions/setup-java@v4
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}
      - name: Cache Maven dependencies
        if: steps.should_run.outputs.run == 'true'
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
            .m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-
      - name: Verify project structure
        if: steps.should_run.outputs.run == 'true'
        run: |
          echo === Project Structure Debug ===
          echo Current directory: %CD%
          dir /b
          echo.
          echo === Source files ===
          if exist src dir src /s /b *.java
          echo.
          echo === Test files ===
          if exist tests dir tests /s /b *.java
        shell: cmd
      - name: Build for SonarCloud
        if: steps.should_run.outputs.run == 'true'
        run: mvn clean compile test-compile
        working-directory: ${{ env.WORKING_DIRECTORY }}
        shell: cmd
      - name: SonarCloud Analysis
        if: steps.should_run.outputs.run == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_SECRET }}
        run: |
          mvn sonar:sonar ^
            -Dsonar.projectKey=${{ env.SONAR_PROJECT_KEY }} ^
            -Dsonar.organization=${{ env.SONAR_ORGANIZATION }} ^
            -Dsonar.host.url=${{ env.SONAR_HOST_URL }} ^
            -Dsonar.token=${{ secrets.SONAR_SECRET }} ^
            -Dsonar.sources=src ^
            -Dsonar.tests=tests ^
            -Dsonar.java.source=17 ^
            -Dsonar.java.target=17 ^
            -Dsonar.java.binaries=target/classes ^
            -Dsonar.java.test.binaries=target/test-classes ^
            -Dsonar.branch.name=${{ github.ref_name }} ^
            -DskipTests=true ^
            -Dsonar.verbose=true
        working-directory: ${{ env.WORKING_DIRECTORY }}
        shell: cmd

  sonar-pr:
    name: SonarCloud PR Analysis
    runs-on: self-hosted
    steps:
      - name: Check if should run
        id: should_run
        run: |
          if "%GITHUB_EVENT_NAME%" == "pull_request" (
            echo run=true >> %GITHUB_OUTPUT%
            echo This job will run for pull request
          ) else (
            echo run=false >> %GITHUB_OUTPUT%
            echo This job will be skipped - not a pull request
          )
        shell: cmd
      - name: Fix Git permissions
        if: steps.should_run.outputs.run == 'true'
        run: |
          git config --global --add safe.directory ${{ github.workspace }}
          git config --global core.autocrlf false
        shell: cmd
      - name: Checkout repository
        if: steps.should_run.outputs.run == 'true'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up JDK
        if: steps.should_run.outputs.run == 'true'
        uses: actions/setup-java@v4
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}
      - name: Cache Maven dependencies
        if: steps.should_run.outputs.run == 'true'
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
            .m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-
      - name: Verify project structure
        if: steps.should_run.outputs.run == 'true'
        run: |
          echo === Project Structure Debug ===
          echo Current directory: %CD%
          dir /b
          echo.
          echo === Source files ===
          if exist src dir src /s /b *.java
          echo.
          echo === Test files ===
          if exist tests dir tests /s /b *.java
        shell: cmd
      - name: Build and test for PR
        if: steps.should_run.outputs.run == 'true'
        run: mvn clean verify -Pcoverage
        working-directory: ${{ env.WORKING_DIRECTORY }}
        shell: cmd
      - name: SonarCloud PR Analysis
        if: steps.should_run.outputs.run == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_SECRET }}
        run: |
          mvn sonar:sonar ^
            -Dsonar.projectKey=${{ env.SONAR_PROJECT_KEY }} ^
            -Dsonar.organization=${{ env.SONAR_ORGANIZATION }} ^
            -Dsonar.host.url=${{ env.SONAR_HOST_URL }} ^
            -Dsonar.token=${{ secrets.SONAR_SECRET }} ^
            -Dsonar.sources=src ^
            -Dsonar.tests=tests ^
            -Dsonar.java.source=17 ^
            -Dsonar.java.target=17 ^
            -Dsonar.java.binaries=target/classes ^
            -Dsonar.java.test.binaries=target/test-classes ^
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml ^
            -Dsonar.junit.reportPaths=target/surefire-reports ^
            -Dsonar.pullrequest.key=${{ github.event.number }} ^
            -Dsonar.pullrequest.branch=${{ github.head_ref }} ^
            -Dsonar.pullrequest.base=${{ github.base_ref }} ^
            -Dsonar.verbose=true
        working-directory: ${{ env.WORKING_DIRECTORY }}
        shell: cmd

  attestation:
    name: Attest SonarCloud Analysis Results
    runs-on: self-hosted
    needs: [sonar-main, sonar-branches, sonar-pr]
    if: always()
    env:
      ARTIFACTS_DIR: ./sonar-artifacts
      REPORT_FILE: ./sonar-artifacts/analysis-report.txt
    steps:
      - name: Configure Git Environment
        run: |
          git config --global --add safe.directory ${{ github.workspace }}
          git config --global core.autocrlf false
        shell: cmd
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Prepare Artifacts Directory
        run: if not exist "${{ env.ARTIFACTS_DIR }}" mkdir "${{ env.ARTIFACTS_DIR }}"
        shell: cmd
      - name: Generate Analysis Report
        run: |
          echo SonarCloud Analysis Report > "${{ env.REPORT_FILE }}"
          echo ========================== >> "${{ env.REPORT_FILE }}"
          echo Project: ${{ env.SONAR_PROJECT_KEY }} >> "${{ env.REPORT_FILE }}"
          echo Analysis Date: %DATE% %TIME% >> "${{ env.REPORT_FILE }}"
          echo SonarCloud URL: ${{ env.SONAR_HOST_URL }} >> "${{ env.REPORT_FILE }}"
          echo Organization: ${{ env.SONAR_ORGANIZATION }} >> "${{ env.REPORT_FILE }}"
          echo Workflow: ${{ github.workflow }} >> "${{ env.REPORT_FILE }}"
          echo Run ID: ${{ github.run_id }} >> "${{ env.REPORT_FILE }}"
          echo. >> "${{ env.REPORT_FILE }}"
          echo Job Results: >> "${{ env.REPORT_FILE }}"
          echo - Main Analysis: ${{ needs.sonar-main.result }} >> "${{ env.REPORT_FILE }}"
          echo - Branch Analysis: ${{ needs.sonar-branches.result }} >> "${{ env.REPORT_FILE }}"
          echo - PR Analysis: ${{ needs.sonar-pr.result }} >> "${{ env.REPORT_FILE }}"
        shell: cmd
      - name: Attest Build Provenance
        if: needs.sonar-main.result == 'success' || needs.sonar-branches.result == 'success' || needs.sonar-pr.result == 'success'
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: '${{ env.ARTIFACTS_DIR }}/*'
